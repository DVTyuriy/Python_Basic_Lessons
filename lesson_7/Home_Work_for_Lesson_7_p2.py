import math


# валідація зчитування довжини сторони трикутника
def input_num(comment):
    while True:
        try:
            v = float(input(comment))
            return v
        except Exception:
            print('Дзуськи, мені потрібне саме тільки число, яке буде довжиною сторони трикутника')


# перевірка, чи можна побудувати трикутник за веденими довжинами сторін
def check_triangle(z: float, x: float, y: float):
    if z + x > y and z + y > x and x + y > z:
        return 'Вітаю, з такими сторонами можна зробити трикутник'
    else:
        return 'Мені дуже прикро, але нажаль не можна побудувати трикутник з такими параметрами'


# розрахунок периметру
def sum_triangle(z1: float, x1: float, y1: float):
    return z1 + x1 + y1


# Розрахунок периметру
def square(qs: float, zs: float, xs: float, ys: float):
    half_p = qs / 2
    return math.sqrt(half_p * (half_p - zs) * (half_p - xs) * (half_p - ys))


if __name__ == '__main__':
    # введення сторони трикутника
    print('Далі ми спробуємо побудувати трикутник зі сторонами "A", "B" та "C". Також визначимо периметр та площу.')
    a = input_num('Введіть довжину сторони "A" трикутника в см.: ')
    b = input_num('Введіть довжину сторони "B" трикутника в см.: ')
    c = input_num('Введіть довжину сторони "C" трикутника в см.: ')

    # звернення до функції валідації трикутника
    print(check_triangle(a, b, c))

    # умова на вихід з програми, якщо не можемо побудувати трикутник за трьома сторонами
    if check_triangle(a, b, c) == 'Мені дуже прикро, але нажаль не можна побудувати трикутник з такими параметрами':
        exit()

    # звернення до функції на розрахунок периметра
    p = sum_triangle(a, b, c)
    print(f'Периметр трикутника становить: {p} см.')

    # звернення до функції на розрахунок площі
    print(f'Площа трикутника становить: {square(p, a, b, c):.2f} см².')
